version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: payment-postgres
    environment:
      POSTGRES_DB: payment_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Payment Service
  payment-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: payment-service
    ports:
      - "8080:8080"
    environment:
      PAYMENT_DATABASE_HOST: postgres
      PAYMENT_DATABASE_PORT: 5432
      PAYMENT_DATABASE_USER: postgres
      PAYMENT_DATABASE_PASSWORD: postgres
      PAYMENT_DATABASE_DBNAME: payment_service
      PAYMENT_DATABASE_SSLMODE: disable
      PAYMENT_LOGGER_LEVEL: info
      PAYMENT_LOGGER_FORMAT: json
      PAYMENT_APP_ENVIRONMENT: production
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (for caching/session management - optional)
  redis:
    image: redis:7-alpine
    container_name: payment-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data: